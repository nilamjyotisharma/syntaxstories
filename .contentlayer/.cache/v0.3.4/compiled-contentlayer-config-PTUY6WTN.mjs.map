{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { defineDocumentType, makeSource} from 'contentlayer/source-files'\r\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings'\r\nimport rehypePrettyCode from 'rehype-pretty-code'\r\nimport rehypeSlug from 'rehype-slug'\r\nimport remarkGfm from 'remark-gfm'\r\n\r\n/** @type {import('contentlayer/source-files').ComputedFields} */\r\nconst computedFields = {\r\n    slug: {\r\n        type: 'string',\r\n        resolve: (doc) => doc._raw.flattenedPath,\r\n        },\r\n    slugAsParams: {\r\n        type: 'string',\r\n        resolve: (doc) => doc._raw.flattenedPath.split('/').slice(1).join('/'),\r\n        },\r\n    structuredData: {\r\n    type: 'object',\r\n    resolve: (doc) => ({\r\n      '@context': 'https://schema.org',\r\n      '@type': 'BlogPosting',\r\n      headline: doc.title,\r\n      datePublished: doc.publishedAt,\r\n      dateModified: doc.publishedAt,\r\n      description: doc.summary,\r\n      image: doc.image\r\n        ? `http://localhost:3000${doc.image}`\r\n        : `http://localhost:3000/og?title=${doc.title}`,\r\n      url: `http://localhost:3000/blog/${doc._raw.flattenedPath}`,\r\n      author: {\r\n        '@type': 'Person',\r\n        name: 'Lee Robinson',\r\n      },\r\n    }),\r\n  },\r\n    }\r\n\r\n    export const Blog = defineDocumentType(() => ({\r\n        name: 'Blog',\r\n        filePathPattern: `**/*.mdx`,\r\n        contentType: 'mdx',\r\n        fields: {\r\n            title: {\r\n                type: 'string',\r\n                required: true,\r\n              },\r\n            publishedAt: {\r\n                type: 'date',\r\n                required: true,\r\n              },\r\n            summary: {\r\n                type: 'string',\r\n                required: true,\r\n              },\r\n            image: {\r\n                type: 'string',\r\n              },\r\n            },\r\n        computedFields,\r\n    }))\r\n    \r\n    export default makeSource({\r\n        contentDirPath: 'content',\r\n        documentTypes: [Blog],\r\n        mdx: {\r\n            remarkPlugins: [remarkGfm],\r\n            rehypePlugins: [\r\n                    rehypeSlug,\r\n                    [\r\n                        rehypePrettyCode,\r\n                        {\r\n                            theme: 'github-dark',\r\n                            onVisitLine(node) {\r\n                            \r\n                                if (node.children.length === 0) {\r\n                                    node.children = [{ type: 'text', value: ' ' }]\r\n                                    }\r\n                            },\r\n                            onVisitHighlightedLine(node) {\r\n                                node.properties.className.push('line--highlighted')\r\n                            },\r\n                            onVisitHighlightedWord(node) {\r\n                                node.properties.className = ['word--highlighted']\r\n                            },\r\n                        }\r\n                    ],\r\n                    [\r\n                        rehypeAutolinkHeadings,\r\n                            {\r\n                                properties: {\r\n                                    className: ['subheading-anchor'],\r\n                                    ariaLabel: 'Link to section',\r\n                                },\r\n                            },\r\n                    ],\r\n                ],\r\n            }\r\n    })\r\n    "],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAiB;AAC9C,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAC7B,OAAO,gBAAgB;AACvB,OAAO,eAAe;AAGtB,IAAM,iBAAiB;AAAA,EACnB,MAAM;AAAA,IACF,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK;AAAA,EAC3B;AAAA,EACJ,cAAc;AAAA,IACV,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,EACrE;AAAA,EACJ,gBAAgB;AAAA,IAChB,MAAM;AAAA,IACN,SAAS,CAAC,SAAS;AAAA,MACjB,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,UAAU,IAAI;AAAA,MACd,eAAe,IAAI;AAAA,MACnB,cAAc,IAAI;AAAA,MAClB,aAAa,IAAI;AAAA,MACjB,OAAO,IAAI,QACP,wBAAwB,IAAI,KAAK,KACjC,kCAAkC,IAAI,KAAK;AAAA,MAC/C,KAAK,8BAA8B,IAAI,KAAK,aAAa;AAAA,MACzD,QAAQ;AAAA,QACN,SAAS;AAAA,QACT,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AACE;AAEO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC1C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,OAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACF,aAAa;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACF,SAAS;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACF,OAAO;AAAA,MACH,MAAM;AAAA,IACR;AAAA,EACF;AAAA,EACJ;AACJ,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACtB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACD,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACP;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,UACI,OAAO;AAAA,UACP,YAAY,MAAM;AAEd,gBAAI,KAAK,SAAS,WAAW,GAAG;AAC5B,mBAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,YAC7C;AAAA,UACR;AAAA,UACA,uBAAuB,MAAM;AACzB,iBAAK,WAAW,UAAU,KAAK,mBAAmB;AAAA,UACtD;AAAA,UACA,uBAAuB,MAAM;AACzB,iBAAK,WAAW,YAAY,CAAC,mBAAmB;AAAA,UACpD;AAAA,QACJ;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QACI;AAAA,UACI,YAAY;AAAA,YACR,WAAW,CAAC,mBAAmB;AAAA,YAC/B,WAAW;AAAA,UACf;AAAA,QACJ;AAAA,MACR;AAAA,IACJ;AAAA,EACJ;AACR,CAAC;",
  "names": []
}
